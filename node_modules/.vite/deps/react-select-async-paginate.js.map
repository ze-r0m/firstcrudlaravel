{
  "version": 3,
  "sources": ["../../@seznam/compose-react-refs/composeRefs.ts", "../../react-select-async-paginate/src/index.ts", "../../react-select-async-paginate/src/useAsyncPaginate.ts", "../../react-select-async-paginate/src/useAsyncPaginateBase.ts", "../../react-select-async-paginate/src/getInitialCache.ts", "../../react-select-async-paginate/src/getInitialOptionsCache.ts", "../../react-select-async-paginate/src/defaultShouldLoadMore.ts", "../../react-select-async-paginate/src/defaultReduceOptions.ts", "../../react-select-async-paginate/src/requestOptions.ts", "../../react-select-async-paginate/src/validateResponse.ts", "../../react-select-async-paginate/src/useComponents.ts", "../../react-select-async-paginate/src/wrapMenuList.tsx", "../../react-select-async-paginate/src/withAsyncPaginate.tsx", "../../react-select-async-paginate/src/reduceGroupedOptions.ts", "../../use-is-mounted-ref/src/use-is-mounted-ref.ts", "../../@vtaits/use-lazy-ref/dist/use-lazy-ref.js", "../../sleep-promise/build/esm.mjs"],
  "sourcesContent": ["import {MutableRefObject, Ref} from 'react'\n\ntype OptionalRef<T> = Ref<T> | undefined\n\nexport default function composeRefs<T>(...refs: [OptionalRef<T>, OptionalRef<T>, ...Array<OptionalRef<T>>]): Ref<T> {\n  if (refs.length === 2) { // micro-optimize the hot path\n    return composeTwoRefs(refs[0], refs[1]) || null\n  }\n\n  const composedRef = refs.slice(1).reduce(\n    (semiCombinedRef: OptionalRef<T>, refToInclude: OptionalRef<T>) => composeTwoRefs(semiCombinedRef, refToInclude),\n    refs[0],\n  )\n  return composedRef || null\n}\n\ntype NonNullRef<T> = NonNullable<Ref<T>>\nconst composedRefCache = new WeakMap<NonNullRef<unknown>, WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>>()\n\nfunction composeTwoRefs<T>(ref1: OptionalRef<T>, ref2: OptionalRef<T>): OptionalRef<T> {\n  if (ref1 && ref2) {\n    const ref1Cache = composedRefCache.get(ref1) || new WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>()\n    composedRefCache.set(ref1, ref1Cache)\n\n    const composedRef = ref1Cache.get(ref2) || ((instance: T): void => {\n      updateRef(ref1, instance)\n      updateRef(ref2, instance)\n    })\n    ref1Cache.set(ref2, composedRef)\n\n    return composedRef as NonNullRef<T>\n  }\n\n  if (!ref1) {\n    return ref2\n  } else {\n    return ref1\n  }\n}\n\nfunction updateRef<T>(ref: NonNullRef<T>, instance: null | T): void {\n  if (typeof ref === 'function') {\n    ref(instance)\n  } else {\n    (ref as MutableRefObject<T | null>).current = instance\n  }\n}\n", "import Select from 'react-select';\n\nimport { withAsyncPaginate } from './withAsyncPaginate';\n\nexport { wrapMenuList } from './wrapMenuList';\nexport { reduceGroupedOptions } from './reduceGroupedOptions';\n\nexport { withAsyncPaginate };\n\nexport {\n  checkIsResponse,\n  validateResponse,\n} from './validateResponse';\nexport { useAsyncPaginateBase } from './useAsyncPaginateBase';\nexport { useAsyncPaginate } from './useAsyncPaginate';\nexport { useComponents } from './useComponents';\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport * from './types';\n", "import {\n  useState,\n  useCallback,\n} from 'react';\nimport type {\n  GroupBase,\n  InputActionMeta,\n} from 'react-select';\n\nimport {\n  useAsyncPaginateBase,\n} from './useAsyncPaginateBase';\n\nimport type {\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n} from './types';\n\nexport const useAsyncPaginate = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateParams<OptionType, Group, Additional>,\n  deps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateResult<OptionType, Group> => {\n  const {\n    inputValue: inputValueParam,\n    menuIsOpen: menuIsOpenParam,\n    defaultInputValue: defaultInputValueParam,\n    defaultMenuIsOpen: defaultMenuIsOpenParam,\n    onInputChange: onInputChangeParam,\n    onMenuClose: onMenuCloseParam,\n    onMenuOpen: onMenuOpenParam,\n  } = params;\n\n  const [inputValueState, setInputValue] = useState(\n    defaultInputValueParam || '',\n  );\n  const [menuIsOpenState, setMenuIsOpen] = useState(\n    !!defaultMenuIsOpenParam,\n  );\n\n  const inputValue: string = typeof inputValueParam === 'string'\n    ? inputValueParam\n    : inputValueState;\n\n  const menuIsOpen: boolean = typeof menuIsOpenParam === 'boolean'\n    ? menuIsOpenParam\n    : menuIsOpenState;\n\n  const onInputChange = useCallback((\n    nextInputValue: string,\n    actionMeta: InputActionMeta,\n  ): void => {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n\n  const onMenuClose = useCallback((): void => {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n\n  const onMenuOpen = useCallback((): void => {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n\n  const baseResult: UseAsyncPaginateBaseResult<OptionType, Group> = useAsyncPaginateBase(\n    {\n      ...params,\n      inputValue,\n      menuIsOpen,\n    },\n    deps,\n  );\n\n  return {\n    ...baseResult,\n    inputValue,\n    menuIsOpen,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n  };\n};\n", "import {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\n\nimport useIsMountedRef from 'use-is-mounted-ref';\n\nimport { useLazyRef } from '@vtaits/use-lazy-ref';\n\nimport { getInitialCache } from './getInitialCache';\nimport { getInitialOptionsCache } from './getInitialOptionsCache';\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\nimport { requestOptions } from './requestOptions';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateBaseParams,\n  RequestOptionsCallerType,\n} from './types';\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBase = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional,\n  >(\n    params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n    deps: ReadonlyArray<any> = [],\n  ): UseAsyncPaginateBaseResult<OptionType, Group> => {\n  const {\n    defaultOptions,\n    loadOptionsOnMenuOpen = true,\n    debounceTimeout = 0,\n    inputValue,\n    menuIsOpen,\n    filterOption = null,\n    reduceOptions = defaultReduceOptions,\n    shouldLoadMore = defaultShouldLoadMore,\n  } = params;\n\n  const isMountedRef = useIsMountedRef();\n\n  const isInitRef = useRef<boolean>(true);\n  const paramsRef = useRef<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>(params);\n\n  paramsRef.current = params;\n\n  const setStateId = useState(0)[1];\n\n  const optionsCacheRef = useLazyRef(() => getInitialOptionsCache(params));\n\n  const callRequestOptions = useCallback((caller: RequestOptionsCallerType): void => {\n    requestOptions(\n      caller,\n      paramsRef,\n      optionsCacheRef,\n      debounceTimeout,\n      (reduceState) => {\n        optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n        if (isMountedRef.current) {\n          setStateId(increaseStateId);\n        }\n      },\n      reduceOptions,\n    );\n  }, [debounceTimeout]);\n\n  const handleScrolledToBottom = useCallback((): void => {\n    const currentInputValue = paramsRef.current.inputValue;\n    const currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions('menu-scroll');\n    }\n  }, [callRequestOptions]);\n\n  useEffect(() => {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions('autoload');\n    }\n  }, deps);\n\n  useEffect(() => {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions('input-change');\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    if (\n      menuIsOpen\n      && !optionsCacheRef.current['']\n      && loadOptionsOnMenuOpen\n    ) {\n      callRequestOptions('menu-toggle');\n    }\n  }, [menuIsOpen]);\n\n  const currentOptions: OptionsCacheItem<\n  OptionType,\n  Group,\n  Additional\n  > = optionsCacheRef.current[inputValue]\n    || getInitialCache(params);\n\n  return {\n    handleScrolledToBottom,\n    shouldLoadMore,\n    filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options,\n  };\n};\n", "import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialCache = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n): OptionsCacheItem<OptionType, Group, Additional> => ({\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional,\n  });\n", "import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCache,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialOptionsCache = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional>(\n    {\n      options,\n      defaultOptions,\n      additional,\n      defaultAdditional,\n    }: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => {\n  const initialOptions = defaultOptions === true\n    ? null\n    : (defaultOptions instanceof Array)\n      ? defaultOptions\n      : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional,\n      },\n    };\n  }\n\n  return {};\n};\n", "import type {\n  ShouldLoadMore,\n} from './types';\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n  return bottomBorder < scrollTop;\n};\n", "import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const defaultReduceOptions = <OptionType, Group extends GroupBase<OptionType>>(\n  prevOptions: OptionsOrGroups<OptionType, Group>,\n  loadedOptions: OptionsOrGroups<OptionType, Group>,\n) => [...prevOptions, ...loadedOptions];\n", "import type {\n  MutableRefObject,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\nimport sleep from 'sleep-promise';\n\nimport { getInitialCache } from './getInitialCache';\nimport { validateResponse } from './validateResponse';\n\nimport type {\n  OptionsCache,\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n  ReduceOptions,\n  RequestOptionsCallerType,\n} from './types';\n\ntype MapOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  prevCache: OptionsCache<OptionType, Group, Additional>,\n) => OptionsCache<OptionType, Group, Additional>;\n\ntype SetOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  stateMapper: MapOptionsCache<OptionType, Group, Additional>,\n) => void;\n\nexport const requestOptions = async <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  caller: RequestOptionsCallerType,\n  paramsRef: MutableRefObject<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>,\n  optionsCacheRef: MutableRefObject<OptionsCache<OptionType, Group, Additional>>,\n  debounceTimeout: number,\n  setOptionsCache: SetOptionsCache<OptionType, Group, Additional>,\n  reduceOptions: ReduceOptions<OptionType, Group, Additional>,\n): Promise<void> => {\n  const currentInputValue = paramsRef.current.inputValue;\n\n  const isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n  const currentOptions: OptionsCacheItem<OptionType, Group, Additional> = isCacheEmpty\n    ? getInitialCache(paramsRef.current)\n    : optionsCacheRef.current[currentInputValue];\n\n  if (currentOptions.isLoading || !currentOptions.hasMore) {\n    return;\n  }\n\n  setOptionsCache((\n    prevOptionsCache: OptionsCache<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      isLoading: true,\n    },\n  }));\n\n  if (debounceTimeout > 0 && caller === 'input-change') {\n    await sleep(debounceTimeout);\n\n    const newInputValue = paramsRef.current.inputValue;\n\n    if (currentInputValue !== newInputValue) {\n      setOptionsCache((prevOptionsCache) => {\n        if (isCacheEmpty) {\n          const {\n            [currentInputValue]: itemForDelete,\n            ...restCache\n          } = prevOptionsCache;\n\n          return restCache;\n        }\n\n        return {\n          ...prevOptionsCache,\n          [currentInputValue]: {\n            ...currentOptions,\n            isLoading: false,\n          },\n        };\n      });\n\n      return;\n    }\n  }\n\n  let response;\n  let hasError = false;\n\n  try {\n    const {\n      loadOptions,\n    } = paramsRef.current;\n\n    response = await loadOptions(\n      currentInputValue,\n      currentOptions.options,\n      currentOptions.additional,\n    );\n  } catch (e) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        isLoading: false,\n      },\n    }));\n\n    return;\n  }\n\n  if (validateResponse(response)) {\n    const {\n      options,\n      hasMore,\n    } = response;\n\n    // eslint-disable-next-line no-prototype-builtins\n    const newAdditional = response.hasOwnProperty('additional')\n      ? response.additional\n      : currentOptions.additional;\n\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        options: reduceOptions(currentOptions.options, options, newAdditional),\n        hasMore: !!hasMore,\n        isLoading: false,\n        isFirstLoad: false,\n        additional: newAdditional,\n      },\n    }));\n  }\n};\n", "import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  Response,\n} from './types';\n\nexport const errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const checkIsResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!response) {\n    return false;\n  }\n\n  const {\n    options,\n    hasMore,\n  } = response as {\n    options?: unknown;\n    hasMore?: unknown;\n  };\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  if (typeof hasMore !== 'boolean' && typeof hasMore !== 'undefined') {\n    return false;\n  }\n\n  return true;\n};\n\nexport const validateResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!checkIsResponse(response)) {\n    // eslint-disable-next-line no-console\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  return true;\n};\n", "import {\n  useMemo,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n} from 'react-select';\n\nimport { components as defaultComponents } from 'react-select';\n\nimport { wrapMenuList } from './wrapMenuList';\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport type SelectComponentsConfig<\nOptionType,\nIsMulti extends boolean,\nGroup extends GroupBase<OptionType>,\n> = Partial<SelectProps<OptionType, IsMulti, Group>['components']>;\n\nexport const useComponents = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nIsMulti extends boolean,\n>(\n    components: SelectComponentsConfig<OptionType, IsMulti, Group>,\n  ): SelectComponentsConfig<OptionType, IsMulti, Group> => useMemo(() => ({\n    MenuList,\n    ...components,\n  }), [components]);\n", "import {\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport type {\n  ReactElement,\n} from 'react';\n\nimport type {\n  GroupBase,\n  MenuListProps,\n} from 'react-select';\n\nimport composeRefs from '@seznam/compose-react-refs';\n\nimport type {\n  ShouldLoadMore,\n} from './types';\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type BaseSelectProps = {\n  handleScrolledToBottom?: () => void;\n  shouldLoadMore: ShouldLoadMore;\n};\n\ntype MenuListType <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n> = (props: MenuListProps<Option, IsMulti, Group>) => ReactElement;\n\nexport function wrapMenuList<\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  MenuList: MenuListType<Option, IsMulti, Group>,\n) {\n  function WrappedMenuList(props: MenuListProps<Option, IsMulti, Group>) {\n    const {\n      selectProps,\n      innerRef,\n    } = props;\n\n    const {\n      handleScrolledToBottom,\n      shouldLoadMore,\n    } = selectProps as unknown as BaseSelectProps;\n\n    const checkTimeoutRef = useRef<NodeJS.Timeout>();\n    const menuListRef = useRef<HTMLElement>(null);\n\n    const shouldHandle = useCallback(() => {\n      const el = menuListRef.current;\n\n      // menu is not rendered\n      if (!el) {\n        return false;\n      }\n\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = el;\n\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n\n    const checkAndHandle = useCallback(() => {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n\n    const setCheckAndHandleTimeout = useCallback(() => {\n      checkAndHandle();\n\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n\n    useEffect(() => {\n      setCheckAndHandleTimeout();\n\n      return (): void => {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <MenuList\n        {...props}\n        innerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n      />\n    );\n  }\n\n  return WrappedMenuList;\n}\n", "import type {\n  Ref,\n  ReactElement,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n  SelectInstance,\n} from 'react-select';\n\nimport {\n  useAsyncPaginate,\n} from './useAsyncPaginate';\nimport {\n  useComponents,\n} from './useComponents';\n\nimport type {\n  UseAsyncPaginateResult,\n  AsyncPaginateProps,\n  WithAsyncPaginateType,\n} from './types';\n\nconst defaultCacheUniqs: unknown[] = [];\nconst defaultComponents = {};\n\ntype SelectComponentType = <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(props: SelectProps<Option, IsMulti, Group> & {\n  ref?: Ref<SelectInstance<Option, IsMulti, Group>>;\n}) => ReactElement;\n\nexport function withAsyncPaginate(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: SelectComponentType,\n): WithAsyncPaginateType {\n  function WithAsyncPaginate<\n  OptionType,\n  Group extends GroupBase<OptionType>,\n  Additional,\n  IsMulti extends boolean = false,\n  >(props: AsyncPaginateProps<OptionType, Group, Additional, IsMulti>): ReactElement {\n    const {\n      components = defaultComponents,\n      selectRef = undefined,\n      isLoading: isLoadingProp,\n      cacheUniqs = defaultCacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType, Group> = useAsyncPaginate(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponents<OptionType, Group, IsMulti>(components);\n\n    const isLoading = typeof isLoadingProp === 'boolean'\n      ? isLoadingProp\n      : asyncPaginateProps.isLoading;\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        isLoading={isLoading}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  }\n\n  return WithAsyncPaginate;\n}\n", "import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const checkGroup = (group: unknown): group is GroupBase<unknown> => {\n  if (!group) {\n    return false;\n  }\n\n  const {\n    label,\n    options,\n  } = group as {\n    label?: unknown;\n    options?: unknown;\n  };\n\n  if (typeof label !== 'string' && typeof label !== 'undefined') {\n    return false;\n  }\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const reduceGroupedOptions = <\nOptionType,\nGroup extends GroupBase<OptionType>,\n>(\n    prevOptions: OptionsOrGroups<OptionType, Group>,\n    loadedOptions: OptionsOrGroups<OptionType, Group>,\n  ): OptionsOrGroups<OptionType, Group> => {\n  const res = prevOptions.slice();\n\n  const mapLabelToIndex: Record<string, number> = {};\n  let prevOptionsIndex = 0;\n  const prevOptionsLength = prevOptions.length;\n\n  loadedOptions.forEach((optionOrGroup) => {\n    const group = checkGroup(optionOrGroup)\n      ? optionOrGroup\n      : {\n        options: [optionOrGroup],\n      } as unknown as Group;\n\n    const {\n      label = '',\n    } = group;\n\n    let groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== 'number') {\n      for (;\n        prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number';\n        ++prevOptionsIndex\n      ) {\n        const prevGroup = prevOptions[prevOptionsIndex];\n\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || ''] = prevOptionsIndex;\n        }\n      }\n\n      groupIndex = mapLabelToIndex[label];\n    }\n\n    if (typeof groupIndex !== 'number') {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n\n    res[groupIndex] = {\n      ...res[groupIndex],\n      options: [...(res[groupIndex] as Group).options, ...group.options],\n    };\n  });\n\n  return res;\n};\n", "import { useRef, useEffect } from 'react';\n\nfunction useIsMountedRef(): { readonly current: boolean } {\n  const isMountedRef = useRef(false);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  return isMountedRef;\n}\n\nexport default useIsMountedRef;\n", "import { useRef } from \"react\";\nconst EMPTY_VALUE = Symbol(\"useLazyRef empty value\");\nconst useLazyRef = (init) => {\n  const resultRef = useRef(EMPTY_VALUE);\n  if (resultRef.current === EMPTY_VALUE) {\n    resultRef.current = init();\n  }\n  return resultRef;\n};\nexport {\n  EMPTY_VALUE,\n  useLazyRef\n};\n", "var e=setTimeout;function t(t,n){var u=n.useCachedSetTimeout?e:setTimeout;return new Promise((function(e){u(e,t)}))}function n(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},u=n.useCachedSetTimeout,r=t(e,{useCachedSetTimeout:u});function o(e){return r.then((function(){return e}))}return o.then=function(){return r.then.apply(r,arguments)},o.catch=Promise.resolve().catch,o}export default n;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAIA,aAAwBA,eAAW;AAAI,UAAA,OAAA,CAAA;eAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAmE;AAAnE,aAAA,EAAA,IAAA,UAAA,EAAA;;AACrC,UAAI,KAAK,WAAW,GAAG;AACrB,eAAO,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK;;AAG7C,UAAM,cAAc,KAAK,MAAM,CAAC,EAAE,OAChC,SAAC,iBAAiC,cAA4B;AAAK,eAAA,eAAe,iBAAiB,YAAY;MAA5C,GACnE,KAAK,CAAC,CAAC;AAET,aAAO,eAAe;IACxB;AAVA,YAAA,UAAAA;AAaA,QAAM,mBAAmB,oBAAI,QAAO;AAEpC,aAAS,eAAkB,MAAsB,MAAoB;AACnE,UAAI,QAAQ,MAAM;AAChB,YAAM,YAAY,iBAAiB,IAAI,IAAI,KAAK,oBAAI,QAAO;AAC3D,yBAAiB,IAAI,MAAM,SAAS;AAEpC,YAAM,cAAc,UAAU,IAAI,IAAI,KAAM,SAAC,UAAW;AACtD,oBAAU,MAAM,QAAQ;AACxB,oBAAU,MAAM,QAAQ;QAC1B;AACA,kBAAU,IAAI,MAAM,WAAW;AAE/B,eAAO;;AAGT,UAAI,CAAC,MAAM;AACT,eAAO;aACF;AACL,eAAO;;IAEX;AAEA,aAAS,UAAa,KAAoB,UAAkB;AAC1D,UAAI,OAAO,QAAQ,YAAY;AAC7B,YAAI,QAAQ;aACP;AACJ,YAAmC,UAAU;;IAElD;;;;;AE9CA,IAAAC,gBAGO;ACHP,IAAAA,gBAKO;;;;AWHP,SAAS,kBAAe;AACtB,MAAM,mBAAe,qBAAO,KAAK;AAEjC,8BAAU,WAAA;AACR,iBAAa,UAAU;AAEvB,WAAO,WAAA;AACL,mBAAa,UAAU;;KAExB,CAAA,CAAE;AAEL,SAAO;AACT;;;ACdA,IAAAC,gBAAuB;AACvB,IAAM,cAAc,OAAO,wBAAwB;AACnD,IAAM,aAAa,CAAC,SAAS;AAC3B,QAAM,gBAAY,sBAAO,WAAW;AACpC,MAAI,UAAU,YAAY,aAAa;AACrC,cAAU,UAAU,KAAK;AAAA,EAC3B;AACA,SAAO;AACT;;;ACRA,IAAI,IAAE;AAAW,SAAS,EAAEC,IAAEC,IAAE;AAAC,MAAI,IAAEA,GAAE,sBAAoB,IAAE;AAAW,SAAO,IAAI,QAAS,SAASC,IAAE;AAAC,MAAEA,IAAEF,EAAC;AAAA,EAAC,CAAE;AAAC;AAAC,SAAS,EAAEE,IAAE;AAAC,MAAID,KAAE,UAAU,SAAO,KAAG,WAAS,UAAU,CAAC,IAAE,UAAU,CAAC,IAAE,CAAC,GAAE,IAAEA,GAAE,qBAAoB,IAAE,EAAEC,IAAE,EAAC,qBAAoB,EAAC,CAAC;AAAE,WAAS,EAAEA,IAAE;AAAC,WAAO,EAAE,KAAM,WAAU;AAAC,aAAOA;AAAA,IAAC,CAAE;AAAA,EAAC;AAAC,SAAO,EAAE,OAAK,WAAU;AAAC,WAAO,EAAE,KAAK,MAAM,GAAE,SAAS;AAAA,EAAC,GAAE,EAAE,QAAM,QAAQ,QAAQ,EAAE,OAAM;AAAC;AAAC,IAAO,cAAQ;;;ANAzZ,IAAAC,gBAEO;ACFP,IAAAC,gBAIO;AAUP,gCAAwB;AAmFlB,yBAAA;ACjCA,IAAAC,sBAAA;ARvDC,IAAM,kBAAkB,CAC7B,YACqD;EACnD,aAAa;EACb,SAAS,CAAC;EACV,SAAS;EACT,WAAW;EACX,YAAY,OAAO;AACrB;ACRK,IAAM,yBAAyB,CAIlC;EACE;EACA;EACA;EACA;AACF,MACgD;AAClD,QAAM,iBAAiB,mBAAmB,OACtC,OACC,0BAA0B,QACzB,iBACA;AAEN,MAAI,gBAAgB;AAClB,WAAO;MACL,IAAI;QACF,aAAa;QACb,WAAW;QACX,SAAS;QACT,SAAS;QACT,YAAY,qBAAqB;MACnC;IACF;EACF;AAEA,SAAO,CAAC;AACV;ACnCA,IAAM,kBAAkB;AAEjB,IAAM,wBAAwC,CAAC,cAAc,cAAc,cAAc;AAC9F,QAAM,eAAe,eAAe,eAAe;AAEnD,SAAO,eAAe;AACxB;ACLO,IAAM,uBAAuB,CAClC,aACA,kBACG,CAAC,GAAG,aAAa,GAAG,aAAa;AEA/B,IAAM,YAAY;AAElB,IAAM,kBAAkB,CAC7B,aACwD;AACxD,MAAI,CAAC,UAAU;AACb,WAAO;EACT;AAEA,QAAM;IACJ;IACA;EACF,IAAI;AAKJ,MAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC3B,WAAO;EACT;AAEA,MAAI,OAAO,YAAY,aAAa,OAAO,YAAY,aAAa;AAClE,WAAO;EACT;AAEA,SAAO;AACT;AAEO,IAAM,mBAAmB,CAC9B,aACwD;AACxD,MAAI,CAAC,gBAAgB,QAAQ,GAAG;AAE9B,YAAQ,MAAM,WAAW,aAAa,QAAQ;AAC9C,UAAM,IAAI,MAAM,SAAS;EAC3B;AAEA,SAAO;AACT;ADlBO,IAAM,iBAAiB,OAC5B,QACA,WACA,iBACA,iBACA,iBACA,kBACkB;AAClB,QAAM,oBAAoB,UAAU,QAAQ;AAE5C,QAAM,eAAe,CAAC,gBAAgB,QAAQ,iBAAA;AAE9C,QAAM,iBAAkE,eACpE,gBAAgB,UAAU,OAAO,IACjC,gBAAgB,QAAQ,iBAAA;AAE5B,MAAI,eAAe,aAAa,CAAC,eAAe,SAAS;AACvD;EACF;AAEA,kBAAgB,CACd,sBACiD;IACjD,GAAG;IACH,CAAC,iBAAA,GAAoB;MACnB,GAAG;MACH,WAAW;IACb;EACF,EAAE;AAEF,MAAI,kBAAkB,KAAK,WAAW,gBAAgB;AACpD,UAAM,YAAM,eAAe;AAE3B,UAAM,gBAAgB,UAAU,QAAQ;AAExC,QAAI,sBAAsB,eAAe;AACvC,sBAAgB,CAAC,qBAAqB;AACpC,YAAI,cAAc;AAChB,gBAAM;YAAA,CACH,iBAAA,GAAoB;YAAA,GAClB;UACL,IAAI;AAEJ,iBAAO;QACT;AAEA,eAAO;UACL,GAAG;UACH,CAAC,iBAAA,GAAoB;YACnB,GAAG;YACH,WAAW;UACb;QACF;MACF,CAAC;AAED;IACF;EACF;AAEA,MAAI;AACJ,MAAI,WAAW;AAEf,MAAI;AACF,UAAM;MACJ;IACF,IAAI,UAAU;AAEd,eAAW,MAAM;MACf;MACA,eAAe;MACf,eAAe;IACjB;EACF,SAASC,IAAP;AACA,eAAW;EACb;AAEA,MAAI,UAAU;AACZ,oBAAgB,CAAC,sBAAsB;MACrC,GAAG;MACH,CAAC,iBAAA,GAAoB;QACnB,GAAG;QACH,WAAW;MACb;IACF,EAAE;AAEF;EACF;AAEA,MAAI,iBAAiB,QAAQ,GAAG;AAC9B,UAAM;MACJ;MACA;IACF,IAAI;AAGJ,UAAM,gBAAgB,SAAS,eAAe,YAAY,IACtD,SAAS,aACT,eAAe;AAEnB,oBAAgB,CAAC,sBAAsB;MACrC,GAAG;MACH,CAAC,iBAAA,GAAoB;QACnB,GAAG;QACH,SAAS,cAAc,eAAe,SAAS,SAAS,aAAa;QACrE,SAAS,CAAC,CAAC;QACX,WAAW;QACX,aAAa;QACb,YAAY;MACd;IACF,EAAE;EACJ;AACF;AL/GO,IAAM,kBAAkB,CAAC,gBAAgC,cAAc;AAEvE,IAAM,uBAAuB,CAKhC,QACA,OAA2B,CAAC,MACsB;AACpD,QAAM;IACJ;IACA,wBAAwB;IACxB,kBAAkB;IAClB;IACA;IACA,eAAe;IACf,gBAAgB;IAChB,iBAAiB;EACnB,IAAI;AAEJ,QAAM,eAAe,gBAAgB;AAErC,QAAM,gBAAY,sBAAgB,IAAI;AACtC,QAAM,gBAAY,sBAAkE,MAAM;AAE1F,YAAU,UAAU;AAEpB,QAAM,iBAAa,wBAAS,CAAC,EAAE,CAAA;AAE/B,QAAM,kBAAkB,WAAW,MAAM,uBAAuB,MAAM,CAAC;AAEvE,QAAM,yBAAqB,2BAAY,CAAC,WAA2C;AACjF;MACE;MACA;MACA;MACA;MACA,CAAC,gBAAgB;AACf,wBAAgB,UAAU,YAAY,gBAAgB,OAAO;AAE7D,YAAI,aAAa,SAAS;AACxB,qBAAW,eAAe;QAC5B;MACF;MACA;IACF;EACF,GAAG,CAAC,eAAe,CAAC;AAEpB,QAAM,6BAAyB,2BAAY,MAAY;AACrD,UAAM,oBAAoB,UAAU,QAAQ;AAC5C,UAAMC,kBAAiB,gBAAgB,QAAQ,iBAAA;AAE/C,QAAIA,iBAAgB;AAClB,yBAAmB,aAAa;IAClC;EACF,GAAG,CAAC,kBAAkB,CAAC;AAEvB,+BAAU,MAAM;AACd,QAAI,UAAU,SAAS;AACrB,gBAAU,UAAU;IACtB,OAAO;AACL,sBAAgB,UAAU,CAAC;AAC3B,iBAAW,eAAe;IAC5B;AAEA,QAAI,mBAAmB,MAAM;AAC3B,yBAAmB,UAAU;IAC/B;EACF,GAAG,IAAI;AAEP,+BAAU,MAAM;AACd,QAAI,cAAc,CAAC,gBAAgB,QAAQ,UAAA,GAAa;AACtD,yBAAmB,cAAc;IACnC;EACF,GAAG,CAAC,UAAU,CAAC;AAEf,+BAAU,MAAM;AACd,QACE,cACG,CAAC,gBAAgB,QAAQ,EAAA,KACzB,uBACH;AACA,yBAAmB,aAAa;IAClC;EACF,GAAG,CAAC,UAAU,CAAC;AAEf,QAAM,iBAIF,gBAAgB,QAAQ,UAAA,KACvB,gBAAgB,MAAM;AAE3B,SAAO;IACL;IACA;IACA;IACA,WAAW,eAAe;IAC1B,aAAa,eAAe;IAC5B,SAAS,eAAe;EAC1B;AACF;AD/GO,IAAM,mBAAmB,CAC9B,QACA,OAA+B,CAAC,MACc;AAC9C,QAAM;IACJ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,YAAY;EACd,IAAI;AAEJ,QAAM,CAAC,iBAAiB,aAAa,QAAIC,cAAAA;IACvC,0BAA0B;EAC5B;AACA,QAAM,CAAC,iBAAiB,aAAa,QAAIA,cAAAA;IACvC,CAAC,CAAC;EACJ;AAEA,QAAM,aAAqB,OAAO,oBAAoB,WAClD,kBACA;AAEJ,QAAM,aAAsB,OAAO,oBAAoB,YACnD,kBACA;AAEJ,QAAM,oBAAgBC,cAAAA,aAAY,CAChC,gBACA,eACS;AACT,QAAI,oBAAoB;AACtB,yBAAmB,gBAAgB,UAAU;IAC/C;AAEA,kBAAc,cAAc;EAC9B,GAAG,CAAC,kBAAkB,CAAC;AAEvB,QAAM,kBAAcA,cAAAA,aAAY,MAAY;AAC1C,QAAI,kBAAkB;AACpB,uBAAiB;IACnB;AAEA,kBAAc,KAAK;EACrB,GAAG,CAAC,gBAAgB,CAAC;AAErB,QAAM,iBAAaA,cAAAA,aAAY,MAAY;AACzC,QAAI,iBAAiB;AACnB,sBAAgB;IAClB;AAEA,kBAAc,IAAI;EACpB,GAAG,CAAC,eAAe,CAAC;AAEpB,QAAM,aAA4D;IAChE;MACE,GAAG;MACH;MACA;IACF;IACA;EACF;AAEA,SAAO;IACL,GAAG;IACH;IACA;IACA;IACA;IACA;EACF;AACF;ASxEO,IAAM,gBAAgB;AAatB,SAAS,aAMdC,WACA;AACA,WAAS,gBAAgB,OAA8C;AACrE,UAAM;MACJ;MACA;IACF,IAAI;AAEJ,UAAM;MACJ;MACA;IACF,IAAI;AAEJ,UAAM,sBAAkBC,cAAAA,QAAuB;AAC/C,UAAM,kBAAcA,cAAAA,QAAoB,IAAI;AAE5C,UAAM,mBAAeF,cAAAA,aAAY,MAAM;AACrC,YAAM,KAAK,YAAY;AAGvB,UAAI,CAAC,IAAI;AACP,eAAO;MACT;AAEA,YAAM;QACJ;QACA;QACA;MACF,IAAI;AAEJ,aAAO,eAAe,cAAc,cAAc,SAAS;IAC7D,GAAG,CAAC,cAAc,CAAC;AAEnB,UAAM,qBAAiBA,cAAAA,aAAY,MAAM;AACvC,UAAI,aAAa,GAAG;AAClB,YAAI,wBAAwB;AAC1B,iCAAuB;QACzB;MACF;IACF,GAAG,CAAC,cAAc,sBAAsB,CAAC;AAEzC,UAAM,+BAA2BA,cAAAA,aAAY,MAAM;AACjD,qBAAe;AAEf,sBAAgB,UAAU,WAAW,0BAA0B,aAAa;IAC9E,GAAG,CAAC,cAAc,CAAC;AAEnBG,sBAAAA,WAAU,MAAM;AACd,+BAAyB;AAEzB,aAAO,MAAY;AACjB,YAAI,gBAAgB,SAAS;AAC3B,uBAAa,gBAAgB,OAAO;QACtC;MACF;IACF,GAAG,CAAC,CAAC;AAEL,eACE;MAACF;MAAA;QACE,GAAG;QACJ,cAAU,0BAAAG,SAAyB,UAAU,WAAW;MAAA;IAC1D;EAEJ;AAEA,SAAO;AACT;AD7FO,IAAM,WAAW,aAAa,WAAkB,QAAQ;AAQxD,IAAM,gBAAgB,CAKzBC,oBACuD,uBAAQ,OAAO;EACtE;EACA,GAAGA;AACL,IAAI,CAACA,WAAU,CAAC;AENlB,IAAM,oBAA+B,CAAC;AACtC,IAAMC,qBAAoB,CAAC;AAUpB,SAAS,kBAEd,iBACuB;AACvB,WAAS,kBAKP,OAAiF;AACjF,UAAM;MACJ,YAAAD,cAAaC;MACb,YAAY;MACZ,WAAW;MACX,aAAa;MAAA,GACV;IACL,IAAI;AAEJ,UAAM,qBAAgE;MACpE;MACA;IACF;AAEA,UAAM,sBAAsB,cAA0CD,WAAU;AAEhF,UAAM,YAAY,OAAO,kBAAkB,YACvC,gBACA,mBAAmB;AAEvB,eACEE,oBAAAA;MAAC;MAAA;QACE,GAAG;QACH,GAAG;QACJ;QACA,YAAY;QACZ,KAAK;MAAA;IACP;EAEJ;AAEA,SAAO;AACT;ACtEO,IAAM,aAAa,CAAC,UAAgD;AACzE,MAAI,CAAC,OAAO;AACV,WAAO;EACT;AAEA,QAAM;IACJ;IACA;EACF,IAAI;AAKJ,MAAI,OAAO,UAAU,YAAY,OAAO,UAAU,aAAa;AAC7D,WAAO;EACT;AAEA,MAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC3B,WAAO;EACT;AAEA,SAAO;AACT;AAEO,IAAM,uBAAuB,CAIhC,aACA,kBACuC;AACzC,QAAM,MAAM,YAAY,MAAM;AAE9B,QAAM,kBAA0C,CAAC;AACjD,MAAI,mBAAmB;AACvB,QAAM,oBAAoB,YAAY;AAEtC,gBAAc,QAAQ,CAAC,kBAAkB;AACvC,UAAM,QAAQ,WAAW,aAAa,IAClC,gBACA;MACA,SAAS,CAAC,aAAa;IACzB;AAEF,UAAM;MACJ,QAAQ;IACV,IAAI;AAEJ,QAAI,aAAa,gBAAgB,KAAA;AACjC,QAAI,OAAO,eAAe,UAAU;AAClC,aACE,mBAAmB,qBAAqB,OAAO,gBAAgB,KAAA,MAAW,UAC1E,EAAE,kBACF;AACA,cAAM,YAAY,YAAY,gBAAA;AAE9B,YAAI,WAAW,SAAS,GAAG;AACzB,0BAAgB,UAAU,SAAS,EAAA,IAAM;QAC3C;MACF;AAEA,mBAAa,gBAAgB,KAAA;IAC/B;AAEA,QAAI,OAAO,eAAe,UAAU;AAClC,sBAAgB,KAAA,IAAS,IAAI;AAC7B,UAAI,KAAK,KAAK;AACd;IACF;AAEA,QAAI,UAAA,IAAc;MAChB,GAAG,IAAI,UAAA;MACP,SAAS,CAAC,GAAI,IAAI,UAAA,EAAsB,SAAS,GAAG,MAAM,OAAO;IACnE;EACF,CAAC;AAED,SAAO;AACT;AZjEO,IAAM,gBAAgB,kBAAkB,oBAAM;",
  "names": ["composeRefs", "import_react", "import_react", "t", "n", "e", "import_react", "import_react", "import_jsx_runtime", "e", "currentOptions", "useState", "useCallback", "MenuList", "useRef", "useEffect", "composeRefs", "components", "defaultComponents", "jsx"]
}
