import {
  __commonJS
} from "./chunk-HM4MQYWN.js";

// node_modules/@editorjs/table/dist/table.js
var require_table = __commonJS({
  "node_modules/@editorjs/table/dist/table.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Table = e() : t.Table = e();
    }(window, function() {
      return function(t) {
        var e = {};
        function o(r) {
          if (e[r])
            return e[r].exports;
          var i = e[r] = { i: r, l: false, exports: {} };
          return t[r].call(i.exports, i, i.exports, o), i.l = true, i.exports;
        }
        return o.m = t, o.c = e, o.d = function(t2, e2, r) {
          o.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: r });
        }, o.r = function(t2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        }, o.t = function(t2, e2) {
          if (1 & e2 && (t2 = o(t2)), 8 & e2)
            return t2;
          if (4 & e2 && "object" == typeof t2 && t2 && t2.__esModule)
            return t2;
          var r = /* @__PURE__ */ Object.create(null);
          if (o.r(r), Object.defineProperty(r, "default", { enumerable: true, value: t2 }), 2 & e2 && "string" != typeof t2)
            for (var i in t2)
              o.d(r, i, (function(e3) {
                return t2[e3];
              }).bind(null, i));
          return r;
        }, o.n = function(t2) {
          var e2 = t2 && t2.__esModule ? function() {
            return t2.default;
          } : function() {
            return t2;
          };
          return o.d(e2, "a", e2), e2;
        }, o.o = function(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }, o.p = "/", o(o.s = 6);
      }([function(t, e) {
        t.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"><rect width="18" height="18" fill="#F4F5F7" rx="2"></rect><circle cx="11.5" cy="6.5" r="1.5"></circle><circle cx="11.5" cy="11.5" r="1.5"></circle><circle cx="6.5" cy="6.5" r="1.5"></circle><circle cx="6.5" cy="11.5" r="1.5"></circle></svg>';
      }, function(t, e, o) {
        var r = o(2);
        "string" == typeof r && (r = [[t.i, r, ""]]);
        var i = { hmr: true, transform: void 0, insertInto: void 0 };
        o(4)(r, i);
        r.locals && (t.exports = r.locals);
      }, function(t, e, o) {
        (t.exports = o(3)(false)).push([t.i, '.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;position:relative;height:100%;width:100%;margin-top:var(--toolbox-icon-size);box-sizing:border-box;display:grid;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size);}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table{position:relative;width:100%;height:100%;display:grid;font-size:14px;border-top:1px solid var(--color-border);line-height:1.4;}.tc-table:after{width:calc(var(--cell-size));height:100%;left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{width:100%;height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border);}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border);}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative;}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color;}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px;}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border);}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal;}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity;}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translateX(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity;}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,0.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;padding:6px;display:none;will-change:opacity,transform;}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none;}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm);}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:rgba(0,0,0,.1);}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}', ""]);
      }, function(t, e) {
        t.exports = function(t2) {
          var e2 = [];
          return e2.toString = function() {
            return this.map(function(e3) {
              var o = function(t3, e4) {
                var o2 = t3[1] || "", r = t3[3];
                if (!r)
                  return o2;
                if (e4 && "function" == typeof btoa) {
                  var i = (s = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(s)))) + " */"), n = r.sources.map(function(t4) {
                    return "/*# sourceURL=" + r.sourceRoot + t4 + " */";
                  });
                  return [o2].concat(n).concat([i]).join("\n");
                }
                var s;
                return [o2].join("\n");
              }(e3, t2);
              return e3[2] ? "@media " + e3[2] + "{" + o + "}" : o;
            }).join("");
          }, e2.i = function(t3, o) {
            "string" == typeof t3 && (t3 = [[null, t3, ""]]);
            for (var r = {}, i = 0; i < this.length; i++) {
              var n = this[i][0];
              "number" == typeof n && (r[n] = true);
            }
            for (i = 0; i < t3.length; i++) {
              var s = t3[i];
              "number" == typeof s[0] && r[s[0]] || (o && !s[2] ? s[2] = o : o && (s[2] = "(" + s[2] + ") and (" + o + ")"), e2.push(s));
            }
          }, e2;
        };
      }, function(t, e, o) {
        var r, i, n = {}, s = (r = function() {
          return window && document && document.all && !window.atob;
        }, function() {
          return void 0 === i && (i = r.apply(this, arguments)), i;
        }), l = function(t2, e2) {
          return e2 ? e2.querySelector(t2) : document.querySelector(t2);
        }, a = function(t2) {
          var e2 = {};
          return function(t3, o2) {
            if ("function" == typeof t3)
              return t3();
            if (void 0 === e2[t3]) {
              var r2 = l.call(this, t3, o2);
              if (window.HTMLIFrameElement && r2 instanceof window.HTMLIFrameElement)
                try {
                  r2 = r2.contentDocument.head;
                } catch (t4) {
                  r2 = null;
                }
              e2[t3] = r2;
            }
            return e2[t3];
          };
        }(), c = null, d = 0, h = [], p = o(5);
        function u(t2, e2) {
          for (var o2 = 0; o2 < t2.length; o2++) {
            var r2 = t2[o2], i2 = n[r2.id];
            if (i2) {
              i2.refs++;
              for (var s2 = 0; s2 < i2.parts.length; s2++)
                i2.parts[s2](r2.parts[s2]);
              for (; s2 < r2.parts.length; s2++)
                i2.parts.push(v(r2.parts[s2], e2));
            } else {
              var l2 = [];
              for (s2 = 0; s2 < r2.parts.length; s2++)
                l2.push(v(r2.parts[s2], e2));
              n[r2.id] = { id: r2.id, refs: 1, parts: l2 };
            }
          }
        }
        function f(t2, e2) {
          for (var o2 = [], r2 = {}, i2 = 0; i2 < t2.length; i2++) {
            var n2 = t2[i2], s2 = e2.base ? n2[0] + e2.base : n2[0], l2 = { css: n2[1], media: n2[2], sourceMap: n2[3] };
            r2[s2] ? r2[s2].parts.push(l2) : o2.push(r2[s2] = { id: s2, parts: [l2] });
          }
          return o2;
        }
        function g(t2, e2) {
          var o2 = a(t2.insertInto);
          if (!o2)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
          var r2 = h[h.length - 1];
          if ("top" === t2.insertAt)
            r2 ? r2.nextSibling ? o2.insertBefore(e2, r2.nextSibling) : o2.appendChild(e2) : o2.insertBefore(e2, o2.firstChild), h.push(e2);
          else if ("bottom" === t2.insertAt)
            o2.appendChild(e2);
          else {
            if ("object" != typeof t2.insertAt || !t2.insertAt.before)
              throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
            var i2 = a(t2.insertAt.before, o2);
            o2.insertBefore(e2, i2);
          }
        }
        function m(t2) {
          if (null === t2.parentNode)
            return false;
          t2.parentNode.removeChild(t2);
          var e2 = h.indexOf(t2);
          e2 >= 0 && h.splice(e2, 1);
        }
        function w(t2) {
          var e2 = document.createElement("style");
          if (void 0 === t2.attrs.type && (t2.attrs.type = "text/css"), void 0 === t2.attrs.nonce) {
            var r2 = function() {
              0;
              return o.nc;
            }();
            r2 && (t2.attrs.nonce = r2);
          }
          return b(e2, t2.attrs), g(t2, e2), e2;
        }
        function b(t2, e2) {
          Object.keys(e2).forEach(function(o2) {
            t2.setAttribute(o2, e2[o2]);
          });
        }
        function v(t2, e2) {
          var o2, r2, i2, n2;
          if (e2.transform && t2.css) {
            if (!(n2 = "function" == typeof e2.transform ? e2.transform(t2.css) : e2.transform.default(t2.css)))
              return function() {
              };
            t2.css = n2;
          }
          if (e2.singleton) {
            var s2 = d++;
            o2 = c || (c = w(e2)), r2 = y.bind(null, o2, s2, false), i2 = y.bind(null, o2, s2, true);
          } else
            t2.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (o2 = function(t3) {
              var e3 = document.createElement("link");
              return void 0 === t3.attrs.type && (t3.attrs.type = "text/css"), t3.attrs.rel = "stylesheet", b(e3, t3.attrs), g(t3, e3), e3;
            }(e2), r2 = R.bind(null, o2, e2), i2 = function() {
              m(o2), o2.href && URL.revokeObjectURL(o2.href);
            }) : (o2 = w(e2), r2 = k.bind(null, o2), i2 = function() {
              m(o2);
            });
          return r2(t2), function(e3) {
            if (e3) {
              if (e3.css === t2.css && e3.media === t2.media && e3.sourceMap === t2.sourceMap)
                return;
              r2(t2 = e3);
            } else
              i2();
          };
        }
        t.exports = function(t2, e2) {
          if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document)
            throw new Error("The style-loader cannot be used in a non-browser environment");
          (e2 = e2 || {}).attrs = "object" == typeof e2.attrs ? e2.attrs : {}, e2.singleton || "boolean" == typeof e2.singleton || (e2.singleton = s()), e2.insertInto || (e2.insertInto = "head"), e2.insertAt || (e2.insertAt = "bottom");
          var o2 = f(t2, e2);
          return u(o2, e2), function(t3) {
            for (var r2 = [], i2 = 0; i2 < o2.length; i2++) {
              var s2 = o2[i2];
              (l2 = n[s2.id]).refs--, r2.push(l2);
            }
            t3 && u(f(t3, e2), e2);
            for (i2 = 0; i2 < r2.length; i2++) {
              var l2;
              if (0 === (l2 = r2[i2]).refs) {
                for (var a2 = 0; a2 < l2.parts.length; a2++)
                  l2.parts[a2]();
                delete n[l2.id];
              }
            }
          };
        };
        var x, C = (x = [], function(t2, e2) {
          return x[t2] = e2, x.filter(Boolean).join("\n");
        });
        function y(t2, e2, o2, r2) {
          var i2 = o2 ? "" : r2.css;
          if (t2.styleSheet)
            t2.styleSheet.cssText = C(e2, i2);
          else {
            var n2 = document.createTextNode(i2), s2 = t2.childNodes;
            s2[e2] && t2.removeChild(s2[e2]), s2.length ? t2.insertBefore(n2, s2[e2]) : t2.appendChild(n2);
          }
        }
        function k(t2, e2) {
          var o2 = e2.css, r2 = e2.media;
          if (r2 && t2.setAttribute("media", r2), t2.styleSheet)
            t2.styleSheet.cssText = o2;
          else {
            for (; t2.firstChild; )
              t2.removeChild(t2.firstChild);
            t2.appendChild(document.createTextNode(o2));
          }
        }
        function R(t2, e2, o2) {
          var r2 = o2.css, i2 = o2.sourceMap, n2 = void 0 === e2.convertToAbsoluteUrls && i2;
          (e2.convertToAbsoluteUrls || n2) && (r2 = p(r2)), i2 && (r2 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i2)))) + " */");
          var s2 = new Blob([r2], { type: "text/css" }), l2 = t2.href;
          t2.href = URL.createObjectURL(s2), l2 && URL.revokeObjectURL(l2);
        }
      }, function(t, e) {
        t.exports = function(t2) {
          var e2 = "undefined" != typeof window && window.location;
          if (!e2)
            throw new Error("fixUrls requires window.location");
          if (!t2 || "string" != typeof t2)
            return t2;
          var o = e2.protocol + "//" + e2.host, r = o + e2.pathname.replace(/\/[^\/]*$/, "/");
          return t2.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(t3, e3) {
            var i, n = e3.trim().replace(/^"(.*)"$/, function(t4, e4) {
              return e4;
            }).replace(/^'(.*)'$/, function(t4, e4) {
              return e4;
            });
            return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(n) ? t3 : (i = 0 === n.indexOf("//") ? n : 0 === n.indexOf("/") ? o + n : r + n.replace(/^\.\//, ""), "url(" + JSON.stringify(i) + ")");
          });
        };
      }, function(t, e, o) {
        "use strict";
        function r(t2, e2, o2 = {}) {
          const r2 = document.createElement(t2);
          Array.isArray(e2) ? r2.classList.add(...e2) : e2 && r2.classList.add(e2);
          for (const t3 in o2)
            Object.prototype.hasOwnProperty.call(o2, t3) && (r2[t3] = o2[t3]);
          return r2;
        }
        function i(t2) {
          const e2 = t2.getBoundingClientRect();
          return { y1: Math.floor(e2.top + window.pageYOffset), x1: Math.floor(e2.left + window.pageXOffset), x2: Math.floor(e2.right + window.pageXOffset), y2: Math.floor(e2.bottom + window.pageYOffset) };
        }
        function n(t2, e2) {
          const o2 = i(t2), r2 = i(e2);
          return { fromTopBorder: r2.y1 - o2.y1, fromLeftBorder: r2.x1 - o2.x1, fromRightBorder: o2.x2 - r2.x2, fromBottomBorder: o2.y2 - r2.y2 };
        }
        function s(t2, e2) {
          return e2.parentNode.insertBefore(t2, e2);
        }
        function l(t2, e2 = true) {
          const o2 = document.createRange(), r2 = window.getSelection();
          o2.selectNodeContents(t2), o2.collapse(e2), r2.removeAllRanges(), r2.addRange(o2);
        }
        o.r(e);
        class a {
          constructor({ items: t2 }) {
            this.items = t2, this.wrapper = void 0, this.itemEls = [];
          }
          static get CSS() {
            return { popover: "tc-popover", popoverOpened: "tc-popover--opened", item: "tc-popover__item", itemHidden: "tc-popover__item--hidden", itemConfirmState: "tc-popover__item--confirm", itemIcon: "tc-popover__item-icon", itemLabel: "tc-popover__item-label" };
          }
          render() {
            return this.wrapper = r("div", a.CSS.popover), this.items.forEach((t2, e2) => {
              const o2 = r("div", a.CSS.item), i2 = r("div", a.CSS.itemIcon, { innerHTML: t2.icon }), n2 = r("div", a.CSS.itemLabel, { textContent: t2.label });
              o2.dataset.index = e2, o2.appendChild(i2), o2.appendChild(n2), this.wrapper.appendChild(o2), this.itemEls.push(o2);
            }), this.wrapper.addEventListener("click", (t2) => {
              this.popoverClicked(t2);
            }), this.wrapper;
          }
          popoverClicked(t2) {
            const e2 = t2.target.closest("." + a.CSS.item);
            if (!e2)
              return;
            const o2 = e2.dataset.index, r2 = this.items[o2];
            !r2.confirmationRequired || this.hasConfirmationState(e2) ? r2.onClick() : this.setConfirmationState(e2);
          }
          setConfirmationState(t2) {
            t2.classList.add(a.CSS.itemConfirmState);
          }
          clearConfirmationState(t2) {
            t2.classList.remove(a.CSS.itemConfirmState);
          }
          hasConfirmationState(t2) {
            return t2.classList.contains(a.CSS.itemConfirmState);
          }
          get opened() {
            return this.wrapper.classList.contains(a.CSS.popoverOpened);
          }
          open() {
            this.items.forEach((t2, e2) => {
              "function" == typeof t2.hideIf && this.itemEls[e2].classList.toggle(a.CSS.itemHidden, t2.hideIf());
            }), this.wrapper.classList.add(a.CSS.popoverOpened);
          }
          close() {
            this.wrapper.classList.remove(a.CSS.popoverOpened), this.itemEls.forEach((t2) => {
              this.clearConfirmationState(t2);
            });
          }
        }
        var c = o(0), d = o.n(c);
        class h {
          constructor({ api: t2, items: e2, onOpen: o2, onClose: r2, cssModifier: i2 = "" }) {
            this.api = t2, this.items = e2, this.onOpen = o2, this.onClose = r2, this.cssModifier = i2, this.popover = null, this.wrapper = this.createToolbox();
          }
          static get CSS() {
            return { toolbox: "tc-toolbox", toolboxShowed: "tc-toolbox--showed", toggler: "tc-toolbox__toggler" };
          }
          get element() {
            return this.wrapper;
          }
          createToolbox() {
            const t2 = r("div", [h.CSS.toolbox, this.cssModifier ? `${h.CSS.toolbox}--${this.cssModifier}` : ""]);
            t2.dataset.mutationFree = "true";
            const e2 = this.createPopover(), o2 = this.createToggler();
            return t2.appendChild(o2), t2.appendChild(e2), t2;
          }
          createToggler() {
            const t2 = r("div", h.CSS.toggler, { innerHTML: d.a });
            return t2.addEventListener("click", () => {
              this.togglerClicked();
            }), t2;
          }
          createPopover() {
            return this.popover = new a({ items: this.items }), this.popover.render();
          }
          togglerClicked() {
            this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
          }
          show(t2) {
            const e2 = t2();
            Object.entries(e2).forEach(([t3, e3]) => {
              this.wrapper.style[t3] = e3;
            }), this.wrapper.classList.add(h.CSS.toolboxShowed);
          }
          hide() {
            this.popover.close(), this.wrapper.classList.remove(h.CSS.toolboxShowed);
          }
        }
        const p = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', u = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', f = "tc-wrap", g = "tc-wrap--readonly", m = "tc-table", w = "tc-row", b = "tc-table--heading", v = "tc-row--selected", x = "tc-cell", C = "tc-cell--selected", y = "tc-add-row", k = "tc-add-column";
        class R {
          constructor(t2, e2, o2, r2) {
            this.readOnly = t2, this.api = e2, this.data = o2, this.config = r2, this.wrapper = null, this.table = null, this.toolboxColumn = this.createColumnToolbox(), this.toolboxRow = this.createRowToolbox(), this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = { withHeadings: false }, this.resize(), this.fill(), this.focusedCell = { row: 0, column: 0 }, this.documentClicked = (t3) => {
              const e3 = null !== t3.target.closest("." + m), o3 = null === t3.target.closest("." + f);
              (e3 || o3) && this.hideToolboxes();
              const r3 = t3.target.closest("." + y), i2 = t3.target.closest("." + k);
              r3 && r3.parentNode === this.wrapper ? (this.addRow(void 0, true), this.hideToolboxes()) : i2 && i2.parentNode === this.wrapper && (this.addColumn(void 0, true), this.hideToolboxes());
            }, this.readOnly || this.bindEvents();
          }
          getWrapper() {
            return this.wrapper;
          }
          bindEvents() {
            document.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", function(t2, e2) {
              let o2 = 0;
              return function(...r2) {
                const i2 = (/* @__PURE__ */ new Date()).getTime();
                if (!(i2 - o2 < t2))
                  return o2 = i2, e2(...r2);
              };
            }(150, (t2) => this.onMouseMoveInTable(t2)), { passive: true }), this.table.onkeypress = (t2) => this.onKeyPressListener(t2), this.table.addEventListener("keydown", (t2) => this.onKeyDownListener(t2)), this.table.addEventListener("focusin", (t2) => this.focusInTableListener(t2));
          }
          createColumnToolbox() {
            return new h({ api: this.api, cssModifier: "column", items: [{ label: this.api.i18n.t("Add column to left"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', onClick: () => {
              this.addColumn(this.selectedColumn, true), this.hideToolboxes();
            } }, { label: this.api.i18n.t("Add column to right"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', onClick: () => {
              this.addColumn(this.selectedColumn + 1, true), this.hideToolboxes();
            } }, { label: this.api.i18n.t("Delete column"), icon: p, hideIf: () => 1 === this.numberOfColumns, confirmationRequired: true, onClick: () => {
              this.deleteColumn(this.selectedColumn), this.hideToolboxes();
            } }], onOpen: () => {
              this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
            }, onClose: () => {
              this.unselectColumn();
            } });
          }
          createRowToolbox() {
            return new h({ api: this.api, cssModifier: "row", items: [{ label: this.api.i18n.t("Add row above"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', onClick: () => {
              this.addRow(this.selectedRow, true), this.hideToolboxes();
            } }, { label: this.api.i18n.t("Add row below"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', onClick: () => {
              this.addRow(this.selectedRow + 1, true), this.hideToolboxes();
            } }, { label: this.api.i18n.t("Delete row"), icon: p, hideIf: () => 1 === this.numberOfRows, confirmationRequired: true, onClick: () => {
              this.deleteRow(this.selectedRow), this.hideToolboxes();
            } }], onOpen: () => {
              this.selectRow(this.hoveredRow), this.hideColumnToolbox();
            }, onClose: () => {
              this.unselectRow();
            } });
          }
          moveCursorToNextRow() {
            this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
          }
          getCell(t2, e2) {
            return this.table.querySelectorAll(`.${w}:nth-child(${t2}) .${x}`)[e2 - 1];
          }
          getRow(t2) {
            return this.table.querySelector(`.${w}:nth-child(${t2})`);
          }
          getRowByCell(t2) {
            return t2.parentElement;
          }
          getRowFirstCell(t2) {
            return t2.querySelector(`.${x}:first-child`);
          }
          setCellContent(t2, e2, o2) {
            this.getCell(t2, e2).innerHTML = o2;
          }
          addColumn(t2 = -1, e2 = false) {
            let o2 = this.numberOfColumns;
            for (let r2 = 1; r2 <= this.numberOfRows; r2++) {
              let i2;
              const n2 = this.createCell();
              if (t2 > 0 && t2 <= o2 ? (i2 = this.getCell(r2, t2), s(n2, i2)) : i2 = this.getRow(r2).appendChild(n2), 1 === r2) {
                const i3 = this.getCell(r2, t2 > 0 ? t2 : o2 + 1);
                i3 && e2 && l(i3);
              }
            }
            this.addHeadingAttrToFirstRow();
          }
          addRow(t2 = -1, e2 = false) {
            let o2, i2 = r("div", w);
            this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
            let n2 = this.numberOfColumns;
            if (t2 > 0 && t2 <= this.numberOfRows) {
              o2 = s(i2, this.getRow(t2));
            } else
              o2 = this.table.appendChild(i2);
            this.fillRow(o2, n2), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
            const a2 = this.getRowFirstCell(o2);
            return a2 && e2 && l(a2), o2;
          }
          deleteColumn(t2) {
            for (let e2 = 1; e2 <= this.numberOfRows; e2++) {
              const o2 = this.getCell(e2, t2);
              if (!o2)
                return;
              o2.remove();
            }
          }
          deleteRow(t2) {
            this.getRow(t2).remove(), this.addHeadingAttrToFirstRow();
          }
          createTableWrapper() {
            if (this.wrapper = r("div", f), this.table = r("div", m), this.readOnly && this.wrapper.classList.add(g), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.toolboxColumn.element), this.wrapper.appendChild(this.table), !this.readOnly) {
              const t2 = r("div", k, { innerHTML: u }), e2 = r("div", y, { innerHTML: u });
              this.wrapper.appendChild(t2), this.wrapper.appendChild(e2);
            }
          }
          computeInitialSize() {
            const t2 = this.data && this.data.content, e2 = Array.isArray(t2), o2 = !!e2 && t2.length, r2 = e2 ? t2.length : void 0, i2 = o2 ? t2[0].length : void 0, n2 = Number.parseInt(this.config && this.config.rows), s2 = Number.parseInt(this.config && this.config.cols), l2 = !isNaN(n2) && n2 > 0 ? n2 : void 0, a2 = !isNaN(s2) && s2 > 0 ? s2 : void 0;
            return { rows: r2 || l2 || 2, cols: i2 || a2 || 2 };
          }
          resize() {
            const { rows: t2, cols: e2 } = this.computeInitialSize();
            for (let e3 = 0; e3 < t2; e3++)
              this.addRow();
            for (let t3 = 0; t3 < e2; t3++)
              this.addColumn();
          }
          fill() {
            const t2 = this.data;
            if (t2 && t2.content)
              for (let e2 = 0; e2 < t2.content.length; e2++)
                for (let o2 = 0; o2 < t2.content[e2].length; o2++)
                  this.setCellContent(e2 + 1, o2 + 1, t2.content[e2][o2]);
          }
          fillRow(t2, e2) {
            for (let o2 = 1; o2 <= e2; o2++) {
              const e3 = this.createCell();
              t2.appendChild(e3);
            }
          }
          createCell() {
            return r("div", x, { contentEditable: !this.readOnly });
          }
          get numberOfRows() {
            return this.table.childElementCount;
          }
          get numberOfColumns() {
            return this.numberOfRows ? this.table.querySelectorAll(`.${w}:first-child .${x}`).length : 0;
          }
          get isColumnMenuShowing() {
            return 0 !== this.selectedColumn;
          }
          get isRowMenuShowing() {
            return 0 !== this.selectedRow;
          }
          onMouseMoveInTable(t2) {
            const { row: e2, column: o2 } = this.getHoveredCell(t2);
            this.hoveredColumn = o2, this.hoveredRow = e2, this.updateToolboxesPosition();
          }
          onKeyPressListener(t2) {
            if ("Enter" === t2.key) {
              if (t2.shiftKey)
                return true;
              this.moveCursorToNextRow();
            }
            return "Enter" !== t2.key;
          }
          onKeyDownListener(t2) {
            "Tab" === t2.key && t2.stopPropagation();
          }
          focusInTableListener(t2) {
            const e2 = t2.target, o2 = this.getRowByCell(e2);
            this.focusedCell = { row: Array.from(this.table.querySelectorAll("." + w)).indexOf(o2) + 1, column: Array.from(o2.querySelectorAll("." + x)).indexOf(e2) + 1 };
          }
          hideToolboxes() {
            this.hideRowToolbox(), this.hideColumnToolbox(), this.updateToolboxesPosition();
          }
          hideRowToolbox() {
            this.unselectRow(), this.toolboxRow.hide();
          }
          hideColumnToolbox() {
            this.unselectColumn(), this.toolboxColumn.hide();
          }
          focusCell() {
            this.focusedCellElem.focus();
          }
          get focusedCellElem() {
            const { row: t2, column: e2 } = this.focusedCell;
            return this.getCell(t2, e2);
          }
          updateToolboxesPosition(t2 = this.hoveredRow, e2 = this.hoveredColumn) {
            this.isColumnMenuShowing || e2 > 0 && e2 <= this.numberOfColumns && this.toolboxColumn.show(() => ({ left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * (1 + (${e2} - 1) * 2))` })), this.isRowMenuShowing || t2 > 0 && t2 <= this.numberOfRows && this.toolboxRow.show(() => {
              const e3 = this.getRow(t2), { fromTopBorder: o2 } = n(this.table, e3), { height: r2 } = e3.getBoundingClientRect();
              return { top: Math.ceil(o2 + r2 / 2) + "px" };
            });
          }
          setHeadingsSetting(t2) {
            this.tunes.withHeadings = t2, t2 ? (this.table.classList.add(b), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(b), this.removeHeadingAttrFromFirstRow());
          }
          addHeadingAttrToFirstRow() {
            for (let t2 = 1; t2 <= this.numberOfColumns; t2++) {
              let e2 = this.getCell(1, t2);
              e2 && e2.setAttribute("heading", this.api.i18n.t("Heading"));
            }
          }
          removeHeadingAttrFromFirstRow() {
            for (let t2 = 1; t2 <= this.numberOfColumns; t2++) {
              let e2 = this.getCell(1, t2);
              e2 && e2.removeAttribute("heading");
            }
          }
          selectRow(t2) {
            const e2 = this.getRow(t2);
            e2 && (this.selectedRow = t2, e2.classList.add(v));
          }
          unselectRow() {
            if (this.selectedRow <= 0)
              return;
            const t2 = this.table.querySelector("." + v);
            t2 && t2.classList.remove(v), this.selectedRow = 0;
          }
          selectColumn(t2) {
            for (let e2 = 1; e2 <= this.numberOfRows; e2++) {
              const o2 = this.getCell(e2, t2);
              o2 && o2.classList.add(C);
            }
            this.selectedColumn = t2;
          }
          unselectColumn() {
            if (this.selectedColumn <= 0)
              return;
            let t2 = this.table.querySelectorAll("." + C);
            Array.from(t2).forEach((t3) => {
              t3.classList.remove(C);
            }), this.selectedColumn = 0;
          }
          getHoveredCell(t2) {
            let e2 = this.hoveredRow, o2 = this.hoveredColumn;
            const { width: r2, height: i2, x: n2, y: s2 } = function(t3, e3) {
              const o3 = t3.getBoundingClientRect(), { width: r3, height: i3, x: n3, y: s3 } = o3, { clientX: l2, clientY: a2 } = e3;
              return { width: r3, height: i3, x: l2 - n3, y: a2 - s3 };
            }(this.table, t2);
            return n2 >= 0 && (o2 = this.binSearch(this.numberOfColumns, (t3) => this.getCell(1, t3), ({ fromLeftBorder: t3 }) => n2 < t3, ({ fromRightBorder: t3 }) => n2 > r2 - t3)), s2 >= 0 && (e2 = this.binSearch(this.numberOfRows, (t3) => this.getCell(t3, 1), ({ fromTopBorder: t3 }) => s2 < t3, ({ fromBottomBorder: t3 }) => s2 > i2 - t3)), { row: e2 || this.hoveredRow, column: o2 || this.hoveredColumn };
          }
          binSearch(t2, e2, o2, r2) {
            let i2, s2 = 0, l2 = t2 + 1, a2 = 0;
            for (; s2 < l2 - 1 && a2 < 10; ) {
              i2 = Math.ceil((s2 + l2) / 2);
              const t3 = e2(i2), c2 = n(this.table, t3);
              if (o2(c2))
                l2 = i2;
              else {
                if (!r2(c2))
                  break;
                s2 = i2;
              }
              a2++;
            }
            return i2;
          }
          getData() {
            const t2 = [];
            for (let e2 = 1; e2 <= this.numberOfRows; e2++) {
              const o2 = this.table.querySelector(`.${w}:nth-child(${e2})`), r2 = Array.from(o2.querySelectorAll("." + x));
              r2.every((t3) => !t3.textContent.trim()) || t2.push(r2.map((t3) => t3.innerHTML));
            }
            return t2;
          }
          destroy() {
            document.removeEventListener("click", this.documentClicked);
          }
        }
        o(1), e.default = class {
          static get isReadOnlySupported() {
            return true;
          }
          static get enableLineBreaks() {
            return true;
          }
          constructor({ data: t2, config: e2, api: o2, readOnly: r2 }) {
            this.api = o2, this.readOnly = r2, this.config = e2, this.data = { withHeadings: this.getConfig("withHeadings", false, t2), content: t2 && t2.content ? t2.content : [] }, this.table = null;
          }
          static get toolbox() {
            return { icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', title: "Table" };
          }
          render() {
            return this.table = new R(this.readOnly, this.api, this.data, this.config), this.container = r("div", this.api.styles.block), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(this.data.withHeadings), this.container;
          }
          renderSettings() {
            return [{ label: this.api.i18n.t("With headings"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', isActive: this.data.withHeadings, closeOnActivate: true, toggle: true, onActivate: () => {
              this.data.withHeadings = true, this.table.setHeadingsSetting(this.data.withHeadings);
            } }, { label: this.api.i18n.t("Without headings"), icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', isActive: !this.data.withHeadings, closeOnActivate: true, toggle: true, onActivate: () => {
              this.data.withHeadings = false, this.table.setHeadingsSetting(this.data.withHeadings);
            } }];
          }
          save() {
            const t2 = this.table.getData();
            return { withHeadings: this.data.withHeadings, content: t2 };
          }
          destroy() {
            this.table.destroy();
          }
          getConfig(t2, e2, o2) {
            const r2 = this.data || o2;
            return r2 ? r2[t2] ? r2[t2] : e2 : this.config && this.config[t2] ? this.config[t2] : e2;
          }
          static get pasteConfig() {
            return { tags: ["TABLE", "TR", "TH", "TD"] };
          }
          onPaste(t2) {
            const e2 = t2.detail.data, o2 = e2.querySelector(":scope > thead, tr:first-of-type th"), r2 = Array.from(e2.querySelectorAll("tr")).map((t3) => Array.from(t3.querySelectorAll("th, td")).map((t4) => t4.innerHTML));
            this.data = { withHeadings: null !== o2, content: r2 }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
          }
        };
      }]).default;
    });
  }
});
export default require_table();
//# sourceMappingURL=@editorjs_table.js.map
